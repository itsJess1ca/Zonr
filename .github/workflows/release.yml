name: Release

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: 'Run in dry-run mode (preview changes without publishing)'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: ${{ inputs.dry-run == true && '🔍 Dry Run Analysis' || '🚀 Production Release' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch full history for semantic-release
          fetch-depth: 0
          # Use a personal access token to allow pushing back to main
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run full quality checks
        run: pnpm run prepublishOnly

      - name: Configure git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Setup npm authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          echo "registry=https://registry.npmjs.org/" >> ~/.npmrc

      - name: Get version info
        id: version-info
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: v$CURRENT_VERSION"

      - name: Release (Dry Run)
        if: ${{ inputs.dry-run }}
        run: pnpm run release:dry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_USERCONFIG: ~/.npmrc

      - name: Release
        if: ${{ !inputs.dry-run }}
        run: pnpm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_USERCONFIG: ~/.npmrc

      - name: 📋 Release Summary
        if: always()
        run: |
          # Get final version for comparison
          FINAL_VERSION=$(node -p "require('./package.json').version")
          INITIAL_VERSION="${{ steps.version-info.outputs.current-version }}"
          
          if [ "${{ inputs.dry-run }}" = "true" ]; then
            echo "## 🔍 Dry Run Summary" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Mode**: Dry Run Analysis (No actual changes made)" >> $GITHUB_STEP_SUMMARY
          else
            echo "## 🚀 Production Release Summary" >> $GITHUB_STEP_SUMMARY  
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Mode**: Production Release" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "**Package**: \`@zonr/core\`" >> $GITHUB_STEP_SUMMARY
          echo "**Starting Version**: \`v$INITIAL_VERSION\`" >> $GITHUB_STEP_SUMMARY
          
          if [ "$FINAL_VERSION" != "$INITIAL_VERSION" ]; then
            echo "**Final Version**: \`v$FINAL_VERSION\` ✨" >> $GITHUB_STEP_SUMMARY
            echo "**Version Change**: \`v$INITIAL_VERSION → v$FINAL_VERSION\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Final Version**: \`v$FINAL_VERSION\` (no change)" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "**Timestamp**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ inputs.dry-run }}" = "true" ]; then
            echo "✅ **Dry run completed** - Review the semantic-release logs above to see what would be released." >> $GITHUB_STEP_SUMMARY
          else
            if [ "$FINAL_VERSION" != "$INITIAL_VERSION" ]; then
              echo "✅ **Release completed** - Package published as \`@zonr/core@$FINAL_VERSION\`" >> $GITHUB_STEP_SUMMARY
            else
              echo "ℹ️ **No release needed** - No relevant changes found since last release." >> $GITHUB_STEP_SUMMARY
            fi
          fi
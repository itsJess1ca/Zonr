name: Manual Publish (Legacy)

on:
  workflow_dispatch:
    inputs:
      version-bump:
        description: 'Version bump type (DEPRECATED: Use semantic-release instead)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      skip-tests:
        description: 'Skip running tests before publish'
        required: false
        default: false
        type: boolean

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch full history for version bumping
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run full test suite (unless skipped)
        if: ${{ !inputs.skip-tests }}
        run: pnpm run prepublishOnly

      - name: Build only (if tests skipped)
        if: ${{ inputs.skip-tests }}
        run: pnpm run build

      - name: Configure git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version
        run: |
          pnpm version ${{ inputs.version-bump }} --no-git-tag-version
          echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Update package.json and create commit
        run: |
          git add package.json
          git commit -m "chore: bump version to v${{ env.NEW_VERSION }} [skip ci]"
          git tag "v${{ env.NEW_VERSION }}"

      - name: Push changes and tags
        run: |
          git push origin main
          git push origin "v${{ env.NEW_VERSION }}"

      - name: Publish to npm
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ env.NEW_VERSION }}"
          release_name: "Release v${{ env.NEW_VERSION }}"
          draft: false
          prerelease: false
          body: |
            ## Changes in v${{ env.NEW_VERSION }}
            
            This release was created automatically from the main branch.
            
            ### Installation
            ```bash
            npm install zonr@${{ env.NEW_VERSION }}
            # or
            pnpm add zonr@${{ env.NEW_VERSION }}
            ```
            
            See [CHANGELOG.md](CHANGELOG.md) for detailed changes.